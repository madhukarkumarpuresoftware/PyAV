name: tests and wheel

on: [push, pull_request]

jobs:

  package-wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Install packages
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config
      - name: Build wheels
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_BEFORE_BUILD: pip install cython && python scripts/fetch-vendor /tmp/vendor
          CIBW_BEFORE_BUILD_WINDOWS: pip install cython && python scripts\fetch-vendor C:\cibw\vendor
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH=/tmp/vendor/lib:$LD_LIBRARY_PATH PKG_CONFIG_PATH=/tmp/vendor/lib/pkgconfig
          CIBW_ENVIRONMENT_MACOS: PKG_CONFIG_PATH=/tmp/vendor/lib/pkgconfig LDFLAGS=-headerpad_max_install_names
          CIBW_ENVIRONMENT_WINDOWS: INCLUDE=C:\\cibw\\vendor\\include LIB=C:\\cibw\\vendor\\lib PYAV_SKIP_TESTS=unicode_filename
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: python scripts/inject-dll {wheel} {dest_dir} C:\cibw\vendor\bin
          CIBW_SKIP: cp27-* pp27-* pp36-win cp35-* cp36-* cp37-*  cp38-*
          CIBW_TEST_COMMAND: mv {project}/av {project}/av.disabled && python -m unittest discover -t {project} -s tests && mv {project}/av.disabled {project}/av
          # disable test suite on OS X, the SSL config seems broken
          CIBW_TEST_COMMAND_MACOS: true
          CIBW_TEST_REQUIRES: numpy
        run: |
          pip install cibuildwheel
          cibuildwheel --output-dir dist
        shell: bash
      - name: Upload wheels
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: [package-wheel]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: dist
          path: dist/
      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
